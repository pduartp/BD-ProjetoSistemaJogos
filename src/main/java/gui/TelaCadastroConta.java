/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package gui;

import entidade.ContaPrincipalJogo;
import entidade.ContaSecundariaJogo;
import entidade.ContaVinculoJogo;
import entidade.UsuarioJogo;
import java.awt.Dimension;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import repositorio.ContaPrincipalJogoDao;
import repositorio.ContaSecundariaJogoDao;
import repositorio.ContaVinculoJogoDao;
import repositorio.UsuarioJogoDao;

/**
 *
 * @author patri
 */
public class TelaCadastroConta extends javax.swing.JFrame {

    private static TelaCadastroConta instance;

    /**
     * Creates new form TelaCadastroConta
     */
    private TelaCadastroConta() {
        initComponents();

        txtExibeContaPrincipalCadastrada.setEditable(false);

        try
        {
            // Adiciona CPF e nickNames da conta secundária no combo-box

            List<UsuarioJogo> usuarios = new UsuarioJogoDao().findAll();
            List<ContaPrincipalJogo> contasP = new ContaPrincipalJogoDao().findAll();
            List<ContaSecundariaJogo> contasS = new ContaSecundariaJogoDao().findAll();

            if (usuarios != null)
            {
                for (UsuarioJogo u : usuarios)
                {
                    cbxSelecionarCPF.addItem(u.getCpf());
                }
            }
            if (contasS != null)
            {
                for (ContaSecundariaJogo c : contasS)
                {
                    cbxSelecionarContaSecCadastrada.addItem(c.getNickName());

                }
            }
        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static TelaCadastroConta getInstance() {
        if (instance == null)
        {
            instance = new TelaCadastroConta();
        }

        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        btngTipoConta = new javax.swing.ButtonGroup();
        btngAdicionarContaSecundaria = new javax.swing.ButtonGroup();
        btngAutorizarCartaoCred = new javax.swing.ButtonGroup();
        btngAutorizarContImp = new javax.swing.ButtonGroup();
        panel1 = new java.awt.Panel();
        lblCadastroUsuario = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblPesquisarNickName = new javax.swing.JLabel();
        txtPesquisarNickName = new javax.swing.JTextField();
        btnPesquisarNickName = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        lblDigitarNickname = new javax.swing.JLabel();
        txtInserirNickName = new javax.swing.JTextField();
        lblMarcarTipoConta = new javax.swing.JLabel();
        rdMarcarPrincipal = new javax.swing.JRadioButton();
        rdMarcarSecundaria = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        lblInserirLogin = new javax.swing.JLabel();
        txtInserirLogin = new javax.swing.JTextField();
        lblInserirSenha = new javax.swing.JLabel();
        psInserirSenha = new javax.swing.JPasswordField();
        cbxSelecionarCPF = new javax.swing.JComboBox<>();
        lblSelecionarCPFCadastrado = new javax.swing.JLabel();
        lblInserirPerguntaSegurança = new javax.swing.JLabel();
        txtInserirPerguntaSeguranca = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        lblInserirRespostaSegurança = new javax.swing.JLabel();
        txtInserirRespostaSeguranca = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        lblMarcarAddContaSecundária = new javax.swing.JLabel();
        rdContaSecundariaMarcarSim = new javax.swing.JRadioButton();
        rdContaSecundariaMarcarNao = new javax.swing.JRadioButton();
        cbxSelecionarContaSecCadastrada = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        lblMarcarAutorizaCardCredito = new javax.swing.JLabel();
        rdAutorizaCardCredSim = new javax.swing.JRadioButton();
        rdAutorizaCardCredNao = new javax.swing.JRadioButton();
        lblMarcarConsumoContImp = new javax.swing.JLabel();
        rdMarcarAutorizaContImpSim = new javax.swing.JRadioButton();
        rdMarcarAutorizaContImpNao = new javax.swing.JRadioButton();
        jSeparator7 = new javax.swing.JSeparator();
        btnLimparCampos = new javax.swing.JButton();
        btnInserir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        lblSelecionarContaPrincipalCadastrada = new javax.swing.JLabel();
        txtExibeContaPrincipalCadastrada = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblCadastroUsuario.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblCadastroUsuario.setForeground(new java.awt.Color(0, 0, 0));
        lblCadastroUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadastroUsuario.setText("CADASTRO DE CONTA\n");

        lblPesquisarNickName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPesquisarNickName.setForeground(new java.awt.Color(0, 0, 0));
        lblPesquisarNickName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPesquisarNickName.setText("Pesquisar NickName:");

        txtPesquisarNickName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnPesquisarNickName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPesquisarNickName.setText("Pesquisar");
        btnPesquisarNickName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarNickNameActionPerformed(evt);
            }
        });

        lblDigitarNickname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDigitarNickname.setForeground(new java.awt.Color(0, 0, 0));
        lblDigitarNickname.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDigitarNickname.setText("nickName:");

        txtInserirNickName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblMarcarTipoConta.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMarcarTipoConta.setForeground(new java.awt.Color(0, 0, 0));
        lblMarcarTipoConta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMarcarTipoConta.setText("tipoConta:");

        btngTipoConta.add(rdMarcarPrincipal);
        rdMarcarPrincipal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdMarcarPrincipal.setForeground(new java.awt.Color(0, 0, 0));
        rdMarcarPrincipal.setText("Principal");
        rdMarcarPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMarcarPrincipalActionPerformed(evt);
            }
        });

        btngTipoConta.add(rdMarcarSecundaria);
        rdMarcarSecundaria.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdMarcarSecundaria.setForeground(new java.awt.Color(0, 0, 0));
        rdMarcarSecundaria.setText("Secundária");
        rdMarcarSecundaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMarcarSecundariaActionPerformed(evt);
            }
        });

        lblInserirLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInserirLogin.setForeground(new java.awt.Color(0, 0, 0));
        lblInserirLogin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInserirLogin.setText("login:");

        txtInserirLogin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblInserirSenha.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInserirSenha.setForeground(new java.awt.Color(0, 0, 0));
        lblInserirSenha.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInserirSenha.setText("senha:");

        psInserirSenha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        psInserirSenha.setText("***************************");
        psInserirSenha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                psInserirSenhaMouseClicked(evt);
            }
        });

        cbxSelecionarCPF.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        lblSelecionarCPFCadastrado.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSelecionarCPFCadastrado.setForeground(new java.awt.Color(0, 0, 0));
        lblSelecionarCPFCadastrado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelecionarCPFCadastrado.setText("CPF Cadastrado:");
        lblSelecionarCPFCadastrado.setToolTipText("");

        lblInserirPerguntaSegurança.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInserirPerguntaSegurança.setForeground(new java.awt.Color(0, 0, 0));
        lblInserirPerguntaSegurança.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInserirPerguntaSegurança.setText("Pergunta de Segurança:");

        txtInserirPerguntaSeguranca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblInserirRespostaSegurança.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInserirRespostaSegurança.setForeground(new java.awt.Color(0, 0, 0));
        lblInserirRespostaSegurança.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblInserirRespostaSegurança.setText("Resposta:");

        txtInserirRespostaSeguranca.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblMarcarAddContaSecundária.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMarcarAddContaSecundária.setForeground(new java.awt.Color(0, 0, 0));
        lblMarcarAddContaSecundária.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMarcarAddContaSecundária.setText("Deseja Adicionar uma Conta Secundária?");

        btngAdicionarContaSecundaria.add(rdContaSecundariaMarcarSim);
        rdContaSecundariaMarcarSim.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdContaSecundariaMarcarSim.setForeground(new java.awt.Color(0, 0, 0));
        rdContaSecundariaMarcarSim.setText("Sim");
        rdContaSecundariaMarcarSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdContaSecundariaMarcarSimActionPerformed(evt);
            }
        });

        btngAdicionarContaSecundaria.add(rdContaSecundariaMarcarNao);
        rdContaSecundariaMarcarNao.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdContaSecundariaMarcarNao.setForeground(new java.awt.Color(0, 0, 0));
        rdContaSecundariaMarcarNao.setText("Não");
        rdContaSecundariaMarcarNao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdContaSecundariaMarcarNaoActionPerformed(evt);
            }
        });

        cbxSelecionarContaSecCadastrada.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Vincule com o nickName");

        lblMarcarAutorizaCardCredito.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMarcarAutorizaCardCredito.setForeground(new java.awt.Color(0, 0, 0));
        lblMarcarAutorizaCardCredito.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMarcarAutorizaCardCredito.setText("Autorizar uso do cartão de crédito?");

        btngAutorizarCartaoCred.add(rdAutorizaCardCredSim);
        rdAutorizaCardCredSim.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdAutorizaCardCredSim.setForeground(new java.awt.Color(0, 0, 0));
        rdAutorizaCardCredSim.setText("Sim");

        btngAutorizarCartaoCred.add(rdAutorizaCardCredNao);
        rdAutorizaCardCredNao.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdAutorizaCardCredNao.setForeground(new java.awt.Color(0, 0, 0));
        rdAutorizaCardCredNao.setText("Não");

        lblMarcarConsumoContImp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMarcarConsumoContImp.setForeground(new java.awt.Color(0, 0, 0));
        lblMarcarConsumoContImp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMarcarConsumoContImp.setText("Autorizar Consumo de Conteúdo Impróprio?");

        btngAutorizarContImp.add(rdMarcarAutorizaContImpSim);
        rdMarcarAutorizaContImpSim.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdMarcarAutorizaContImpSim.setForeground(new java.awt.Color(0, 0, 0));
        rdMarcarAutorizaContImpSim.setText("Sim");

        btngAutorizarContImp.add(rdMarcarAutorizaContImpNao);
        rdMarcarAutorizaContImpNao.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rdMarcarAutorizaContImpNao.setForeground(new java.awt.Color(0, 0, 0));
        rdMarcarAutorizaContImpNao.setText("Não");
        rdMarcarAutorizaContImpNao.setToolTipText("");

        btnLimparCampos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimparCamposMouseClicked(evt);
            }
        });

        btnInserir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnListar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblSelecionarContaPrincipalCadastrada.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSelecionarContaPrincipalCadastrada.setForeground(new java.awt.Color(0, 0, 0));
        lblSelecionarContaPrincipalCadastrada.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSelecionarContaPrincipalCadastrada.setText("Conta Principal Cadastrada:");
        lblSelecionarContaPrincipalCadastrada.setToolTipText("");

        txtExibeContaPrincipalCadastrada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtExibeContaPrincipalCadastrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExibeContaPrincipalCadastradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCadastroUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5)
                    .addComponent(jSeparator1)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lblPesquisarNickName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarNickName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisarNickName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lblDigitarNickname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInserirNickName))
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblInserirLogin)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblInserirPerguntaSegurança)
                                .addComponent(lblInserirRespostaSegurança, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInserirPerguntaSeguranca)
                            .addComponent(txtInserirRespostaSeguranca)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(txtInserirLogin)
                                .addGap(18, 18, 18)
                                .addComponent(lblInserirSenha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(psInserirSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(lblMarcarTipoConta)
                                .addGap(18, 18, 18)
                                .addComponent(rdMarcarPrincipal)
                                .addGap(53, 53, 53)
                                .addComponent(rdMarcarSecundaria))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(panel1Layout.createSequentialGroup()
                                            .addComponent(lblMarcarAutorizaCardCredito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(rdAutorizaCardCredSim)
                                            .addGap(18, 18, 18)
                                            .addComponent(rdAutorizaCardCredNao))
                                        .addGroup(panel1Layout.createSequentialGroup()
                                            .addComponent(lblMarcarConsumoContImp)
                                            .addGap(18, 18, 18)
                                            .addComponent(rdMarcarAutorizaContImpSim)
                                            .addGap(18, 18, 18)
                                            .addComponent(rdMarcarAutorizaContImpNao)))
                                    .addGroup(panel1Layout.createSequentialGroup()
                                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lblMarcarAddContaSecundária, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(panel1Layout.createSequentialGroup()
                                                .addComponent(rdContaSecundariaMarcarSim)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdContaSecundariaMarcarNao))
                                            .addComponent(cbxSelecionarContaSecCadastrada, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(lblSelecionarCPFCadastrado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSelecionarCPF, 0, 170, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSelecionarContaPrincipalCadastrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExibeContaPrincipalCadastrada, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(lblCadastroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPesquisarNickName)
                        .addComponent(txtPesquisarNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPesquisarNickName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDigitarNickname)
                    .addComponent(txtInserirNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarcarTipoConta)
                    .addComponent(rdMarcarPrincipal)
                    .addComponent(rdMarcarSecundaria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelecionarCPFCadastrado)
                    .addComponent(cbxSelecionarCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelecionarContaPrincipalCadastrada)
                    .addComponent(txtExibeContaPrincipalCadastrada))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInserirLogin)
                    .addComponent(txtInserirLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInserirSenha)
                    .addComponent(psInserirSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInserirPerguntaSegurança)
                    .addComponent(txtInserirPerguntaSeguranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInserirRespostaSegurança)
                    .addComponent(txtInserirRespostaSeguranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarcarAddContaSecundária)
                    .addComponent(rdContaSecundariaMarcarSim)
                    .addComponent(rdContaSecundariaMarcarNao))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSelecionarContaSecCadastrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarcarAutorizaCardCredito)
                    .addComponent(rdAutorizaCardCredSim)
                    .addComponent(rdAutorizaCardCredNao))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarcarConsumoContImp)
                    .addComponent(rdMarcarAutorizaContImpNao)
                    .addComponent(rdMarcarAutorizaContImpSim))
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimparCampos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserir)
                    .addComponent(btnAtualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(btnRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void psInserirSenhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_psInserirSenhaMouseClicked
        // Limpa o campo de senha
        psInserirSenha.setText("");
    }//GEN-LAST:event_psInserirSenhaMouseClicked

    private void btnLimparCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparCamposMouseClicked
        rdMarcarPrincipal.setEnabled(true);
        rdMarcarSecundaria.setEnabled(true);

        // Limpar os campos de texto
        txtInserirLogin.setText("");
        txtInserirNickName.setText("");
        txtInserirPerguntaSeguranca.setText("");
        txtInserirRespostaSeguranca.setText("");
        txtPesquisarNickName.setText("");
        txtExibeContaPrincipalCadastrada.setText(" ");

        psInserirSenha.setText("***************************");

        // Desmarcar os radio buttons
        btngTipoConta.clearSelection();
        btngAdicionarContaSecundaria.clearSelection();
        btngAutorizarCartaoCred.clearSelection();
        btngAutorizarContImp.clearSelection();

        // Desbloquear os radio buttons de adicionar uma conta secundária
        rdContaSecundariaMarcarNao.setEnabled(true);
        rdContaSecundariaMarcarSim.setEnabled(true);

        // Desbloquear o combobox de selecionar um ID de conta secundária
        cbxSelecionarContaSecCadastrada.setEnabled(true);

        // Desbloquear os radio buttons de autorizar uso de cartão de crédito
        rdAutorizaCardCredNao.setEnabled(true);
        rdAutorizaCardCredSim.setEnabled(true);

        // Desbloquear os radio buttons de consumo de conteúdo impróprio
        rdMarcarAutorizaContImpNao.setEnabled(true);
        rdMarcarAutorizaContImpSim.setEnabled(true);

    }//GEN-LAST:event_btnLimparCamposMouseClicked

    private void rdContaSecundariaMarcarSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdContaSecundariaMarcarSimActionPerformed
        cbxSelecionarContaSecCadastrada.setEnabled(true);

        rdAutorizaCardCredSim.setEnabled(true);
        rdAutorizaCardCredNao.setEnabled(true);

        rdMarcarAutorizaContImpSim.setEnabled(true);
        rdMarcarAutorizaContImpNao.setEnabled(true);
    }//GEN-LAST:event_rdContaSecundariaMarcarSimActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        // Istancia os objetos necessários para inserção
        ContaVinculoJogo contaVinculo = new ContaVinculoJogo();
        ContaPrincipalJogo contaPrincipal = new ContaPrincipalJogo();
        ContaSecundariaJogo contaSecundaria = new ContaSecundariaJogo();

        UsuarioJogo usuario = new UsuarioJogo();

        // Verifica se todos os campos foram preenchidos e os radiobuttons foram selecionados
        if (txtInserirNickName.getText().isEmpty()
                || txtInserirLogin.getText().isEmpty()
                || psInserirSenha.getPassword().length == 0
                || txtInserirPerguntaSeguranca.getText().isEmpty()
                || txtInserirRespostaSeguranca.getText().isEmpty()
                || (!rdMarcarPrincipal.isSelected() && !rdMarcarSecundaria.isSelected())
                || (rdContaSecundariaMarcarSim.isSelected() && cbxSelecionarContaSecCadastrada.getSelectedItem() == null))
        {
            JOptionPane.showMessageDialog(
                    null, "Por favor, preencha todos os campos e marque uma opção válida.",
                    "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Interrompe a execução do método
        }

        try
        {
            // Inserindo dados em contaVinculo
            contaVinculo.setNickName(txtInserirNickName.getText());

            // Verifica se um dos botões que correspondem ao tipos de conta foram selecionados
            // Seta os dados em contaVinculo e de acordo com o tipo da conta
            if (rdMarcarPrincipal.isSelected())
            {
                // Salva os dados de conta vinculo como principal
                contaVinculo.setTipoConta("Principal");
                new ContaVinculoJogoDao().saveOrUpdate(contaVinculo, true);

                usuario.setCpf((String) cbxSelecionarCPF.getSelectedItem());
                // Seta o CPF de usuario na conta principal
                contaPrincipal.setUsuarioJogo(usuario);

                // Seta o nickname de contaVinculo na conta principal
                contaPrincipal.setNickName(contaVinculo.getNickName());
                contaPrincipal.setTipoConta(contaVinculo.getTipoConta());

                // Seta os demais dados
                contaPrincipal.setLogin(txtInserirLogin.getText());
                contaPrincipal.setSenha(new String(psInserirSenha.getPassword()));
                contaPrincipal.setPerguntaSeguranca(txtInserirPerguntaSeguranca.getText());
                contaPrincipal.setRespostaSeguranca(txtInserirRespostaSeguranca.getText());

                new ContaPrincipalJogoDao().saveOrUpdate(contaPrincipal, true);

                // Verifica se o usuário quer adicionar uma conta secundária na conta principal
                if (rdContaSecundariaMarcarSim.isSelected())
                {
                    // Pega um nickname de uma conta secundárias existente
                    String nickNameSelecionado = (String) cbxSelecionarContaSecCadastrada.getSelectedItem();
                    contaSecundaria.setNickName(nickNameSelecionado);
                    // Seta o registro do banco de dados correspondente ao id da conta secundária
                    contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);

                    contaSecundaria.setContaPrincipalJogo(contaPrincipal);

                    // Seta as permissões da conta secundaria
                    if (rdAutorizaCardCredSim.isSelected())
                    {
                        contaSecundaria.setPermissaoCardCredito(1);

                    }
                    if (rdAutorizaCardCredNao.isSelected())
                    {
                        contaSecundaria.setPermissaoCardCredito(0);
                    }

                    if (rdMarcarAutorizaContImpSim.isSelected())
                    {
                        contaSecundaria.setPermissaoContImproprio(1);
                    }
                    if (rdMarcarAutorizaContImpNao.isSelected())
                    {
                        contaSecundaria.setPermissaoContImproprio(0);
                    }

                    new ContaSecundariaJogoDao().saveOrUpdate(contaSecundaria, false);
                }
            }
            // Usuário cadastra conta secundaria ao invés da principal
            if (rdMarcarSecundaria.isSelected())
            {
                // Salva os dados de conta vinculo como secundária
                contaVinculo.setTipoConta("Secundária");
                new ContaVinculoJogoDao().saveOrUpdate(contaVinculo, true);

                // Seta o nickname de contaVinculo na conta secundaria
                contaSecundaria.setNickName(contaVinculo.getNickName());
                contaSecundaria.setTipoConta(contaVinculo.getTipoConta());

                // Seta o CPF de usuario na conta principal
                usuario.setCpf((String) cbxSelecionarCPF.getSelectedItem());
                contaSecundaria.setUsuarioJogo(usuario);

                // Uma conta secundaria recebe a chave estrangeira de contaPrincipal
                String contaPrincipalSelecionada = (String) txtExibeContaPrincipalCadastrada.getSelectedText();
                if (contaPrincipalSelecionada != null)
                {
                    contaPrincipal.setNickName(contaPrincipalSelecionada);
                    contaPrincipal = new ContaPrincipalJogoDao().findByPk(contaPrincipal);

                    // Se a conta secundaria que ser vinculada em uma conta principal, seta uma conta principal
                    contaSecundaria.setContaPrincipalJogo(contaPrincipal);
                }

                contaSecundaria.setLogin(txtInserirLogin.getText());

                // Seta os demais dados
                contaSecundaria.setSenha(new String(psInserirSenha.getPassword()));
                contaSecundaria.setPerguntaSeguranca(txtInserirPerguntaSeguranca.getText());
                contaSecundaria.setRespostaSeguranca(txtInserirRespostaSeguranca.getText());

                contaSecundaria.setPermissaoCardCredito(0);
                contaSecundaria.setPermissaoContImproprio(0);
                contaSecundaria.setContaPrincipalJogo(contaPrincipal);

                // Salva as informações de conta secundária
                new ContaSecundariaJogoDao().saveOrUpdate(contaSecundaria, true);

                // Adiciona uma conta secundaria no combo obox
                cbxSelecionarContaSecCadastrada.addItem(contaSecundaria.getNickName());
            }

            // Remove o cpf do combobox
            cbxSelecionarCPF.removeItem(usuario.getCpf());

            JOptionPane.showMessageDialog(
                    null, "Conta Cadastrada com Sucesso!");

        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        try
        {
            // Obter o nickname do usuário que será excluído
            String nickName = txtInserirNickName.getText();

            // Cria uma istância dos objetos
            ContaVinculoJogo contaVinculo = new ContaVinculoJogo();
            ContaPrincipalJogo contaPrincipal = new ContaPrincipalJogo();
            ContaSecundariaJogo contaSecundaria = new ContaSecundariaJogo();

            // Seta primeiramente em conta vinculo
            contaVinculo.setNickName(nickName);

            // Procura um id na tabela de contaVincula
            contaVinculo = new ContaVinculoJogoDao().findByPk(contaVinculo);

            // Caso não for nulo
            if (contaVinculo != null)
            {
                if ("Principal".equals(contaVinculo.getTipoConta()))
                {
                    // Procura o nickname primeiro na conta principal
                    contaPrincipal.setNickName(nickName);
                    contaPrincipal = new ContaPrincipalJogoDao().findByPk(contaPrincipal);

                    // Adiciona novamente o CPF no combo box
                    cbxSelecionarCPF.addItem(contaPrincipal.getUsuarioJogo().getCpf());

                    // Exclue a conta principal
                    new ContaPrincipalJogoDao().deleteByPk(contaPrincipal);
                }

                if ("Secundária".equals(contaVinculo.getTipoConta()))
                {
                    // Caso não encontrou, procura o nick name da conta secundaria
                    contaSecundaria.setNickName(nickName);
                    contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);

                    // Adiciona novamente o CPF no combo box
                    cbxSelecionarCPF.addItem(contaSecundaria.getUsuarioJogo().getCpf());

                    // Exclue a conta secundaria
                    new ContaSecundariaJogoDao().deleteByPk(contaSecundaria);

                    // Remove uma contaSecundaria do combo box
                    cbxSelecionarContaSecCadastrada.removeItem(nickName);
                }

                // Por fim, deleta a conta secundária
                new ContaVinculoJogoDao().deleteByPk(contaVinculo);

                JOptionPane.showMessageDialog(null, "Conta excluída com sucesso!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Conta não encontrada.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnPesquisarNickNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarNickNameActionPerformed
        // Verificar se o campo nickName se encontra preenchido
        if (txtPesquisarNickName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "NickName da conta não foi fornecido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Sai do método se o ID não for fornecido
        }

        try
        {
            // Obter o nickname do usuário que será excluído
            String nickName = txtPesquisarNickName.getText();

            // Cria uma istância dos objetos
            ContaVinculoJogo contaVinculo = new ContaVinculoJogo();
            ContaPrincipalJogo contaPrincipal = new ContaPrincipalJogo();
            ContaSecundariaJogo contaSecundaria = new ContaSecundariaJogo();

            // Seta primeiramente em conta vinculo
            contaVinculo.setNickName(nickName);

            // Procura um id na tabela de contaVincula
            contaVinculo = new ContaVinculoJogoDao().findByPk(contaVinculo);

            // Verifica se o campo de pesquisa de nickname está vazio
            if (nickName.isEmpty())
            {
                JOptionPane.showMessageDialog(
                        null, "Digite um nickname para pesquisar.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (contaVinculo != null)
            {
                rdMarcarPrincipal.setEnabled(false);
                rdMarcarSecundaria.setEnabled(false);

                if ("Principal".equals(contaVinculo.getTipoConta()))
                {
                    rdMarcarPrincipal.setSelected(true);

                    // Verifica se existe uma conta principal com o nickname pesquisado
                    contaPrincipal.setNickName(nickName);
                    contaPrincipal = new ContaPrincipalJogoDao().findByPk(contaPrincipal);

                    // Carrega os dados de conta principal
                    txtInserirNickName.setText(contaPrincipal.getNickName());
                    txtInserirLogin.setText(contaPrincipal.getLogin());
                    psInserirSenha.setText(contaPrincipal.getSenha());
                    txtInserirPerguntaSeguranca.setText(contaPrincipal.getPerguntaSeguranca());
                    txtInserirRespostaSeguranca.setText(contaPrincipal.getRespostaSeguranca());
                }

                if ("Secundária".equals(contaVinculo.getTipoConta()))
                {
                    rdMarcarSecundaria.setSelected(true);

                    // Verifica se existe uma conta secundária com o nickname pesquisado
                    contaSecundaria.setNickName(nickName);
                    contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);

                    // Verifica se a conta secundária tem uma chave estrangeira cadastrada
                    if (contaSecundaria.getContaPrincipalJogo() != null)
                    {
                        txtExibeContaPrincipalCadastrada.setText(contaSecundaria.getContaPrincipalJogo().getNickName());
                    }

                    // Carrega os dados de conta secundaria
                    txtInserirNickName.setText(contaPrincipal.getNickName());
                    txtInserirLogin.setText(contaSecundaria.getLogin());
                    psInserirSenha.setText(contaSecundaria.getSenha());
                    txtInserirPerguntaSeguranca.setText(contaSecundaria.getPerguntaSeguranca());
                    txtInserirRespostaSeguranca.setText(contaSecundaria.getRespostaSeguranca());

                    // Carregar as permissões da conta secundária
                    if (contaSecundaria.getPermissaoCardCredito() == 1)
                    {
                        rdAutorizaCardCredSim.setSelected(true);
                    } else
                    {
                        rdAutorizaCardCredNao.setSelected(true);
                    }

                    if (contaSecundaria.getPermissaoContImproprio() == 1)
                    {
                        rdMarcarAutorizaContImpSim.setSelected(true);
                    } else
                    {
                        rdMarcarAutorizaContImpNao.setSelected(true);
                    }
                }

                JOptionPane.showMessageDialog(null, "Conta encontrada com sucesso!");
            } else
            {
                // Caso não encontre uma conta com o nickname pesquisado
                JOptionPane.showMessageDialog(
                        null, "Nickname não encontrado ou inválido.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPesquisarNickNameActionPerformed

    private void rdMarcarPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMarcarPrincipalActionPerformed
        if (rdMarcarPrincipal.isSelected())
        {
            txtExibeContaPrincipalCadastrada.setEnabled(false);

            // Desbloquear os radio buttons de adicionar uma conta secundária
            rdContaSecundariaMarcarNao.setEnabled(true);
            rdContaSecundariaMarcarSim.setEnabled(true);

            // Desbloquear o combobox de selecionar um ID de conta secundária
            cbxSelecionarContaSecCadastrada.setEnabled(true);

            // Desbloquear os radio buttons de autorizar uso de cartão de crédito
            rdAutorizaCardCredNao.setEnabled(true);
            rdAutorizaCardCredSim.setEnabled(true);

            // Desbloquear os radio buttons de consumo de conteúdo impróprio
            rdMarcarAutorizaContImpNao.setEnabled(true);
            rdMarcarAutorizaContImpSim.setEnabled(true);
        }
    }//GEN-LAST:event_rdMarcarPrincipalActionPerformed

    private void rdMarcarSecundariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMarcarSecundariaActionPerformed
        if (rdMarcarSecundaria.isSelected())
        {
            txtExibeContaPrincipalCadastrada.setEnabled(true);

            // Bloquear os radio buttons de adicionar uma conta secundária
            rdContaSecundariaMarcarNao.setEnabled(false);
            rdContaSecundariaMarcarSim.setEnabled(false);

            cbxSelecionarContaSecCadastrada.setEnabled(false);

            rdAutorizaCardCredNao.setEnabled(false);
            rdAutorizaCardCredSim.setEnabled(false);

            rdMarcarAutorizaContImpNao.setEnabled(false);
            rdMarcarAutorizaContImpSim.setEnabled(false);

        }
    }//GEN-LAST:event_rdMarcarSecundariaActionPerformed

    private void rdContaSecundariaMarcarNaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdContaSecundariaMarcarNaoActionPerformed
        if (rdContaSecundariaMarcarNao.isSelected())
        {
            cbxSelecionarContaSecCadastrada.setEnabled(false);

            rdAutorizaCardCredSim.setEnabled(false);
            rdAutorizaCardCredNao.setEnabled(false);

            rdMarcarAutorizaContImpSim.setEnabled(false);
            rdMarcarAutorizaContImpNao.setEnabled(false);
        }
    }//GEN-LAST:event_rdContaSecundariaMarcarNaoActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        try
        {
            // Cria um modelo de tabela para armazenar os dados das contas
            DefaultTableModel model = new DefaultTableModel();
//            model.addColumn("Tipo de Conta");
            model.addColumn("Nickname");
            model.addColumn("Login");
            model.addColumn("Senha");
            model.addColumn("Pergunta de Segurança");
            model.addColumn("Resposta de Segurança");
            model.addColumn("Autorização de Cartão de Crédito");
            model.addColumn("Autorização de Conteúdo Impróprio");
            model.addColumn("Conta Principal Vinculada");

            // Adiciona as contas principais à tabela
            List<ContaPrincipalJogo> contasPrincipais = new ContaPrincipalJogoDao().findAll();
            if (contasPrincipais != null)
            {
                for (ContaPrincipalJogo contaPrincipal : contasPrincipais)
                {
                    Object[] rowData =
                    {
//                        contaPrincipal.getTipoConta(),
                        contaPrincipal.getNickName(),
                        contaPrincipal.getLogin(),
                        contaPrincipal.getSenha(),
                        contaPrincipal.getPerguntaSeguranca(),
                        contaPrincipal.getRespostaSeguranca(),
                        "-", // N/A para contas principais
                        "-",
                        "-"
                    };
                    model.addRow(rowData);
                }
            }

            // Adiciona as contas secundárias à tabela
            List<ContaSecundariaJogo> contasSecundarias = new ContaSecundariaJogoDao().findAll();
            if (contasSecundarias != null)
            {
                for (ContaSecundariaJogo contaSecundaria : contasSecundarias)
                {
                    String permissaoCardCredito;
                    String permissaoContImproprio;

                    if (contaSecundaria.getPermissaoCardCredito() == 1)
                    {
                        permissaoCardCredito = "Sim";
                    } else
                    {
                        permissaoCardCredito = "Não";
                    }

                    if (contaSecundaria.getPermissaoContImproprio() == 1)
                    {
                        permissaoContImproprio = "Sim";
                    } else
                    {
                        permissaoContImproprio = "Não";
                    }
                    Object[] rowData =
                    {
//                        contaSecundaria.getTipoConta(),
                        contaSecundaria.getNickName(),
                        contaSecundaria.getLogin(),
                        contaSecundaria.getSenha(),
                        contaSecundaria.getPerguntaSeguranca(),
                        contaSecundaria.getRespostaSeguranca(),
                        permissaoCardCredito,
                        permissaoContImproprio,
                        contaSecundaria.getContaPrincipalJogo() != null ? contaSecundaria.getContaPrincipalJogo().getNickName() : "-"
                    };
                    model.addRow(rowData);
                }
            }

            // Cria o componente JTable com o modelo de tabela
            JTable table = new JTable(model);

            // Adiciona a tabela a um JScrollPane para permitir rolagem
            JScrollPane scrollPane = new JScrollPane(table);

            // Cria um JDialog personalizado
            JDialog dialog = new JDialog();
            dialog.setTitle("Lista de Contas");
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setPreferredSize(new Dimension(800, 600));
            dialog.setResizable(true);

            // Adiciona o JScrollPane ao JDialog
            dialog.getContentPane().add(scrollPane);

            // Ajusta o tamanho do JDialog para se adaptar ao conteúdo
            dialog.pack();

            // Define a visibilidade do JDialog como verdadeiro
            dialog.setVisible(true);

        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try
        {
            String nickName = txtPesquisarNickName.getText();

            // Istancia as contas
            ContaVinculoJogo contaVinculo = new ContaVinculoJogo();
            ContaPrincipalJogo contaPrincipal = new ContaPrincipalJogo();
            ContaSecundariaJogo contaSecundaria = new ContaSecundariaJogo();

            // Procura primeiramente se existe na tabela de contaVinculo
            contaVinculo.setNickName(nickName);
            contaVinculo = new ContaVinculoJogoDao().findByPk(contaVinculo);

            // Caso exista
            if (contaVinculo != null)
            {
                // Se for uma conta principal
                if ("Principal".equals(contaVinculo.getTipoConta()))
                {
                    // Procura no banco de dados
                    contaPrincipal.setNickName(nickName);
                    contaPrincipal = new ContaPrincipalJogoDao().findByPk(contaPrincipal);

                    // Insere os dados de nickname contundo, deve ser alterado o nickname também de contavinculo                    
//                    contaVinculo.setNickName(txtInserirNickName.getText());
//                    contaPrincipal.setNickName(contaVinculo.getNickName());
                    // Insere os demais dados
                    contaPrincipal.setLogin(txtInserirLogin.getText());
                    contaPrincipal.setSenha(psInserirSenha.getText());

                    contaPrincipal.setPerguntaSeguranca(txtInserirPerguntaSeguranca.getText());
                    contaPrincipal.setRespostaSeguranca(txtInserirRespostaSeguranca.getText());

//                    new ContaVinculoJogoDao().saveOrUpdate(contaVinculo, false);
                    new ContaPrincipalJogoDao().saveOrUpdate(contaPrincipal, false);

                    // Procura uma possível conta secundária vinculada a principal
                    contaSecundaria.setNickName((String) cbxSelecionarContaSecCadastrada.getSelectedItem());

                    contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);
                    contaSecundaria.setContaPrincipalJogo(contaPrincipal);

                    // Verifica se o usuário quer adicionar uma conta secundária na conta principal
                    if (rdContaSecundariaMarcarSim.isSelected())
                    {
                        // Pega um nickname de uma conta secundárias existente
                        String nickNameSelecionado = (String) cbxSelecionarContaSecCadastrada.getSelectedItem();
                        contaSecundaria.setNickName(nickNameSelecionado);
                        // Seta o registro do banco de dados correspondente ao id da conta secundária
                        contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);

                        contaSecundaria.setContaPrincipalJogo(contaPrincipal);

                        // Seta as permissões da conta secundaria
                        if (rdAutorizaCardCredSim.isSelected())
                        {
                            contaSecundaria.setPermissaoCardCredito(1);

                        }
                        if (rdAutorizaCardCredNao.isSelected())
                        {
                            contaSecundaria.setPermissaoCardCredito(0);
                        }

                        if (rdMarcarAutorizaContImpSim.isSelected())
                        {
                            contaSecundaria.setPermissaoContImproprio(1);
                        }
                        if (rdMarcarAutorizaContImpNao.isSelected())
                        {
                            contaSecundaria.setPermissaoContImproprio(0);
                        }

                        new ContaSecundariaJogoDao().saveOrUpdate(contaSecundaria, false);
                        cbxSelecionarContaSecCadastrada.removeItem(contaSecundaria.getNickName());
                    }
                }

                if ("Secundária".equals(contaVinculo.getTipoConta()))
                {
                    contaSecundaria.setNickName(nickName);
                    contaSecundaria = new ContaSecundariaJogoDao().findByPk(contaSecundaria);

                    contaSecundaria.setLogin(txtInserirLogin.getText());
                    contaSecundaria.setSenha(psInserirSenha.getText());

                    contaSecundaria.setPerguntaSeguranca(txtInserirPerguntaSeguranca.getText());
                    contaSecundaria.setRespostaSeguranca(txtInserirRespostaSeguranca.getText());

                    new ContaSecundariaJogoDao().saveOrUpdate(contaSecundaria, false);
                }

                JOptionPane.showMessageDialog(
                        null, "Conta Atualizada com Sucesso!");
            } else
            {
                // Caso não encontre uma conta com o nickname pesquisado
                JOptionPane.showMessageDialog(
                        null, "Não foi possível efetuar a atualização",
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex)
        {
            Logger.getLogger(TelaCadastroConta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtExibeContaPrincipalCadastradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExibeContaPrincipalCadastradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExibeContaPrincipalCadastradaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException
                | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TelaCadastroConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnPesquisarNickName;
    private javax.swing.JButton btnRemover;
    private javax.swing.ButtonGroup btngAdicionarContaSecundaria;
    private javax.swing.ButtonGroup btngAutorizarCartaoCred;
    private javax.swing.ButtonGroup btngAutorizarContImp;
    private javax.swing.ButtonGroup btngTipoConta;
    private javax.swing.JComboBox<String> cbxSelecionarCPF;
    private javax.swing.JComboBox<String> cbxSelecionarContaSecCadastrada;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lblCadastroUsuario;
    private javax.swing.JLabel lblDigitarNickname;
    private javax.swing.JLabel lblInserirLogin;
    private javax.swing.JLabel lblInserirPerguntaSegurança;
    private javax.swing.JLabel lblInserirRespostaSegurança;
    private javax.swing.JLabel lblInserirSenha;
    private javax.swing.JLabel lblMarcarAddContaSecundária;
    private javax.swing.JLabel lblMarcarAutorizaCardCredito;
    private javax.swing.JLabel lblMarcarConsumoContImp;
    private javax.swing.JLabel lblMarcarTipoConta;
    private javax.swing.JLabel lblPesquisarNickName;
    private javax.swing.JLabel lblSelecionarCPFCadastrado;
    private javax.swing.JLabel lblSelecionarContaPrincipalCadastrada;
    private java.awt.Panel panel1;
    private javax.swing.JPasswordField psInserirSenha;
    private javax.swing.JRadioButton rdAutorizaCardCredNao;
    private javax.swing.JRadioButton rdAutorizaCardCredSim;
    private javax.swing.JRadioButton rdContaSecundariaMarcarNao;
    private javax.swing.JRadioButton rdContaSecundariaMarcarSim;
    private javax.swing.JRadioButton rdMarcarAutorizaContImpNao;
    private javax.swing.JRadioButton rdMarcarAutorizaContImpSim;
    private javax.swing.JRadioButton rdMarcarPrincipal;
    private javax.swing.JRadioButton rdMarcarSecundaria;
    private javax.swing.JTextField txtExibeContaPrincipalCadastrada;
    private javax.swing.JTextField txtInserirLogin;
    private javax.swing.JTextField txtInserirNickName;
    private javax.swing.JTextField txtInserirPerguntaSeguranca;
    private javax.swing.JTextField txtInserirRespostaSeguranca;
    private javax.swing.JTextField txtPesquisarNickName;
    // End of variables declaration//GEN-END:variables
}
